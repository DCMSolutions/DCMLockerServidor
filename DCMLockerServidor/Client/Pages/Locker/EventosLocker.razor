@page "/info/{idLocker:int}/eventos"
@attribute [Authorize]


@if (locker != null)
{
    <div style="display: flex; justify-content: space-between;">
        <div>
            <h1>Eventos del locker @locker.NroSerieLocker:</h1>
        </div>
        <div>
            <button style="outline:none;height:100%;" class="btn btn-success btn-user btn-block" title="Recargar" @onclick="() => refreshEventos()"><FeatherRefreshCw Color="black"></FeatherRefreshCw></button>
            <button style="outline:none;height:100%;" class="btn btn-secondary btn-user btn-block" title="Volver" @onclick="() => BotonAtras()"><FeatherArrowLeft Color="black"></FeatherArrowLeft></button>
        </div>
    </div>
}

<div>
    @if (eventos != null)
    {
        <br />
        <div class="tablacontent" style="position:relative;">
            <RadzenDataGrid AllowColumnResize="true" AllowAllowAlternatingRows="true" FilterMode="FilterMode.Simple" AllowSorting="false" PageSize="100" Density="Density.Compact"
                            AllowPaging="true" AllowFiltering="true" ShowPagingSummary="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" EmptyText="No hay eventos aún."
                            Data="@eventos" TItem="Evento" LogicalFilterOperator="LogicalFilterOperator.And" PagerHorizontalAlign="HorizontalAlign.Center" @ref="grid"
                            EqualsText="Igual a" NotEqualsText="No es igual" LessThanText="Menor que" LessThanOrEqualsText="Menor o igual que" GreaterThanText="Mayor que"
                            GreaterThanOrEqualsText="Mayor o igual que" ClearFilterText="Limpiar filtro" ApplyFilterText="Aplicar filtro" IsNullText="Es nulo"
                            IsNotNullText="No es nulo">
                <Columns>
                    <RadzenDataGridColumn TItem="Evento" Property="FechaCreacion" Title="Fecha" Width="200px" />
                    <RadzenDataGridColumn TItem="Evento" Property="Identificador" Title="Identificador" Width="150px" />
                    <RadzenDataGridColumn TItem="Evento" Property="Descripcion" Title="Descripción" />


                </Columns>
            </RadzenDataGrid>
        </div>
    }
    else
    {
        <a>No hay eventos aún.</a>
    }
</div>


@code {

    [Parameter] public int idLocker { get; set; }
    Locker? locker;
    List<Evento>? eventos = new() { };
    RadzenDataGrid<Evento> grid;

    protected override async Task OnInitializedAsync()
    {
        locker = await config.GetLockerById(idLocker);
        eventos = await config.GetEventosByIdLocker(idLocker);
    }

    async void refreshEventos()
    {
        eventos = await config.GetEventosByIdLocker(idLocker);
        await grid.Reload();
        StateHasChanged();
    }

    void BotonAtras()
    {
        nav.NavigateTo($"/info/{idLocker}");
    }

}
