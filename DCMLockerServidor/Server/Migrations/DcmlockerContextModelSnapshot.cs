// <auto-generated />
using System;
using DCMLockerServidor.Server.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DCMLockerServidor.Server.Migrations
{
    [DbContext(typeof(DcmlockerContext))]
    partial class DcmlockerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_unicode_ci")
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Box1")
                        .HasColumnType("int")
                        .HasColumnName("Box");

                    b.Property<bool?>("Enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("IdFisico")
                        .HasColumnType("int");

                    b.Property<int>("IdLocker")
                        .HasColumnType("int");

                    b.Property<int?>("IdSize")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Libre")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Ocupacion")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("Puerta")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdLocker" }, "FK_Boxes_IdLocker");

                    b.HasIndex(new[] { "IdSize" }, "FK_Boxes_IdSize");

                    b.ToTable("boxes", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_520_ci");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory", (string)null);
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<sbyte?>("Active")
                        .HasColumnType("tinyint");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("TokenEmpresa")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("empresas", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_520_ci");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Locker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Empresa")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("NroSerieLocker")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Empresa" }, "FK_Lockers_Empresa");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique();

                    b.ToTable("lockers", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_520_ci");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Alto")
                        .HasColumnType("int");

                    b.Property<int?>("Ancho")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<int?>("Profundidad")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("sizes", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_520_ci");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Token", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("Confirmado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Contador")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdBox")
                        .HasColumnType("int");

                    b.Property<int?>("IdLocker")
                        .HasColumnType("int");

                    b.Property<int?>("IdSize")
                        .HasColumnType("int");

                    b.Property<string>("Modo")
                        .HasColumnType("text");

                    b.Property<string>("Token1")
                        .HasColumnType("longtext")
                        .HasColumnName("Token");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdBox" }, "FK_Tokens_IdBox");

                    b.HasIndex(new[] { "IdLocker" }, "FK_Tokens_IdLocker");

                    b.HasIndex(new[] { "IdSize" }, "FK_Tokens_IdSize");

                    b.ToTable("tokens", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_unicode_520_ci");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Box", b =>
                {
                    b.HasOne("DCMLockerServidor.Shared.Models.Locker", "IdLockerNavigation")
                        .WithMany("Boxes")
                        .HasForeignKey("IdLocker")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Boxes_IdLocker");

                    b.HasOne("DCMLockerServidor.Shared.Models.Size", "IdSizeNavigation")
                        .WithMany("Boxes")
                        .HasForeignKey("IdSize")
                        .HasConstraintName("FK_Boxes_IdSize");

                    b.Navigation("IdLockerNavigation");

                    b.Navigation("IdSizeNavigation");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Locker", b =>
                {
                    b.HasOne("DCMLockerServidor.Shared.Models.Empresa", "EmpresaNavigation")
                        .WithMany("Lockers")
                        .HasForeignKey("Empresa")
                        .HasConstraintName("FK_Lockers_Empresa");

                    b.Navigation("EmpresaNavigation");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Token", b =>
                {
                    b.HasOne("DCMLockerServidor.Shared.Models.Box", "IdBoxNavigation")
                        .WithMany("Tokens")
                        .HasForeignKey("IdBox")
                        .HasConstraintName("FK_Tokens_IdBox");

                    b.HasOne("DCMLockerServidor.Shared.Models.Locker", "IdLockerNavigation")
                        .WithMany("Tokens")
                        .HasForeignKey("IdLocker")
                        .HasConstraintName("FK_Tokens_IdLocker");

                    b.HasOne("DCMLockerServidor.Shared.Models.Size", "IdSizeNavigation")
                        .WithMany("Tokens")
                        .HasForeignKey("IdSize")
                        .HasConstraintName("FK_Tokens_IdSize");

                    b.Navigation("IdBoxNavigation");

                    b.Navigation("IdLockerNavigation");

                    b.Navigation("IdSizeNavigation");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Box", b =>
                {
                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Empresa", b =>
                {
                    b.Navigation("Lockers");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Locker", b =>
                {
                    b.Navigation("Boxes");

                    b.Navigation("Tokens");
                });

            modelBuilder.Entity("DCMLockerServidor.Shared.Models.Size", b =>
                {
                    b.Navigation("Boxes");

                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
